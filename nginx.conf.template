worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    port_in_redirect off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy for TensorFlow.js and webcam access
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://storage.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: blob:; media-src 'self' blob:; connect-src 'self' https://storage.googleapis.com https://tfhub.dev https://www.kaggle.com; worker-src 'self' blob:; child-src 'self' blob:;" always;
    
    # HTTPS redirect (when behind a proxy)
    map $http_x_forwarded_proto $redirect_to_https {
        default 0;
        http 1;
    }

    # Set real IP and forwarded headers properly for proxy
    map $http_x_forwarded_host $best_host {
        default $http_x_forwarded_host;
        '' $host;
    }

    server {
        listen 8080;
        server_name _;
        root /tmp/html;
        index index.html;

        # Security headers for camera access
        add_header Feature-Policy "camera 'self'; microphone 'none'" always;
        
        # HTTPS redirect
        if ($redirect_to_https) {
            return 301 https://$best_host$request_uri;
        }

        # Health check endpoint
        location ${BASE_PATH}/health {
            access_log off;
            return 200 '{"status":"healthy","service":"pose-detection-motion-tracking","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }


        # API endpoints (if any)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Proxy configuration for API (if backend exists)
            # proxy_pass http://backend:3000;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            
            return 404;
        }

        # BASE_PATH_LOCATION_BLOCK


        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /tmp/html;
            internal;
        }
    }
}